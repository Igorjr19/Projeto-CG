package View;

import com.formdev.flatlaf.FlatIntelliJLaf;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileNameExtensionFilter;
import view.DialogDesenhos;
import view.DialogImagem;
import view.DialogRGBtoHSV;

/**
 *
 * @author Lucas Ikeda e Igor Rodrigues
 */
public class FrameInicial extends javax.swing.JFrame implements ActionListener {
    
    
    /**
     * Creates new form Screen
     */
    public FrameInicial() {
        initComponents();
    }

    public void actionPerformed(ActionEvent evt) {
        if (evt.getSource() == carregarIMG) {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titulo = new javax.swing.JLabel();
        menu = new javax.swing.JMenuBar();
        img = new javax.swing.JMenu();
        carregarIMG = new javax.swing.JMenuItem();
        RGBtoHSL = new javax.swing.JMenuItem();
        retas = new javax.swing.JMenu();
        retaLinear = new javax.swing.JMenuItem();
        retaParametrica = new javax.swing.JMenuItem();
        retaBresenham = new javax.swing.JMenuItem();
        retaClipping = new javax.swing.JMenuItem();
        circunferencia = new javax.swing.JMenu();
        circEq = new javax.swing.JMenuItem();
        circParametrica = new javax.swing.JMenuItem();
        circBresenham = new javax.swing.JMenuItem();
        projecao3D = new javax.swing.JMenu();
        jMenuItemCasinha = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        titulo.setFont(titulo.getFont().deriveFont(titulo.getFont().getStyle() | java.awt.Font.BOLD, titulo.getFont().getSize()+30));
        titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo.setText("Trabalho Computação Gráfica");

        img.setText("Imagem e Cor");

        carregarIMG.setText("Abrir Imagem");
        carregarIMG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carregarIMGActionPerformed(evt);
            }
        });
        img.add(carregarIMG);

        RGBtoHSL.setText("RGB e HSL");
        RGBtoHSL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RGBtoHSLActionPerformed(evt);
            }
        });
        img.add(RGBtoHSL);

        menu.add(img);

        retas.setText("Retas");

        retaLinear.setText("Função Linear");
        retaLinear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retaLinearActionPerformed(evt);
            }
        });
        retas.add(retaLinear);

        retaParametrica.setText("Função Paramétrica");
        retaParametrica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retaParametricaActionPerformed(evt);
            }
        });
        retas.add(retaParametrica);

        retaBresenham.setText("Bresenham");
        retaBresenham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retaBresenhamActionPerformed(evt);
            }
        });
        retas.add(retaBresenham);

        retaClipping.setText("Clipping");
        retaClipping.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retaClippingActionPerformed(evt);
            }
        });
        retas.add(retaClipping);

        menu.add(retas);

        circunferencia.setText("Circunferências");

        circEq.setText("Equação");
        circEq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                circEqActionPerformed(evt);
            }
        });
        circunferencia.add(circEq);

        circParametrica.setText("Função Paramétrica");
        circParametrica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                circParametricaActionPerformed(evt);
            }
        });
        circunferencia.add(circParametrica);

        circBresenham.setText("Bresenham");
        circBresenham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                circBresenhamActionPerformed(evt);
            }
        });
        circunferencia.add(circBresenham);

        menu.add(circunferencia);

        projecao3D.setText("Projeção 3D");

        jMenuItemCasinha.setText("Casinha");
        jMenuItemCasinha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCasinhaActionPerformed(evt);
            }
        });
        projecao3D.add(jMenuItemCasinha);

        menu.add(projecao3D);

        setJMenuBar(menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titulo, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(249, 249, 249)
                .addComponent(titulo)
                .addContainerGap(299, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void retaLinearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retaLinearActionPerformed
        // TODO add your handling code here:
        DialogDesenhos linear = new DialogDesenhos(this, true, "Desenhando Retas a partir da Função Linear", "linear");
        linear.setLocationRelativeTo(this);
        linear.setVisible(true);
    }//GEN-LAST:event_retaLinearActionPerformed

    private void circParametricaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_circParametricaActionPerformed
        // TODO add your handling code here:
        DialogDesenhos circleParametric = new DialogDesenhos(this, true, "Desenhando Cricunferências a partir da equação paramétrica", "circleParametric");
        circleParametric.setLocationRelativeTo(this);
        circleParametric.setVisible(true);
    }//GEN-LAST:event_circParametricaActionPerformed

    private void jMenuItemCasinhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCasinhaActionPerformed
        // TODO add your handling code here:
        DialogCasinha projecao = new DialogCasinha(this, true);
        projecao.setLocationRelativeTo(this);
        projecao.setVisible(true);
    }//GEN-LAST:event_jMenuItemCasinhaActionPerformed

    private void retaBresenhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retaBresenhamActionPerformed
        // TODO add your handling code here:
        DialogDesenhos bresenham = new DialogDesenhos(this, true, "Desenhando Retas com o Algoritmo de Bresenham", "bresenham");
        bresenham.setLocationRelativeTo(this);
        bresenham.setVisible(true);
    }//GEN-LAST:event_retaBresenhamActionPerformed

    private void carregarIMGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carregarIMGActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();

        fileChooser.setDialogTitle("Selecione uma imagem para abrir");
        FileNameExtensionFilter filter = new FileNameExtensionFilter(".jpg", "jpg", "jpeg");
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.setFileFilter(filter);

        int resposta = fileChooser.showOpenDialog(this);
        if(resposta == JFileChooser.APPROVE_OPTION) {
            String imgPath = fileChooser.getSelectedFile().getPath();
            DialogImagem dialogImg = new DialogImagem(this, true, imgPath);
            dialogImg.setLocationRelativeTo(this);
            dialogImg.setVisible(true);
        }
    }//GEN-LAST:event_carregarIMGActionPerformed

    private void RGBtoHSLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RGBtoHSLActionPerformed
        // TODO add your handling code here:
        DialogRGBtoHSV rgbToHsv = new DialogRGBtoHSV(this, true);
        rgbToHsv.setLocationRelativeTo(this);
        rgbToHsv.setVisible(true);
    }//GEN-LAST:event_RGBtoHSLActionPerformed

    private void retaParametricaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retaParametricaActionPerformed
        // TODO add your handling code here:
        DialogDesenhos parametric = new DialogDesenhos(this, true, "Desenhando Retas a partir da forma Paramétrica da Reta", "parametric");
        parametric.setLocationRelativeTo(this);
        parametric.setVisible(true);
    }//GEN-LAST:event_retaParametricaActionPerformed

    private void circEqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_circEqActionPerformed
        // TODO add your handling code here:
        DialogDesenhos circNormal = new DialogDesenhos(this, true, "Desenhando Circunferências a partir da equação", "circleNormal");
        circNormal.setLocationRelativeTo(this);
        circNormal.setVisible(true);
    }//GEN-LAST:event_circEqActionPerformed

    private void circBresenhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_circBresenhamActionPerformed
        // TODO add your handling code here:
        DialogDesenhos circNormal = new DialogDesenhos(this, true, "Desenhando Circunferências com o Algoritmo de Bresenham", "circleBresenham");
        circNormal.setLocationRelativeTo(this);
        circNormal.setVisible(true);
    }//GEN-LAST:event_circBresenhamActionPerformed

    private void retaClippingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retaClippingActionPerformed
        // TODO add your handling code here:
        DialogDesenhos clipping = new DialogDesenhos(this, true, "Desenhando Retas com Clipping", "clipping");
        clipping.setLocationRelativeTo(this);
        clipping.setVisible(true);
    }//GEN-LAST:event_retaClippingActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogCasinha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogCasinha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogCasinha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogCasinha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel(new FlatIntelliJLaf());
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(FrameInicial.class.getName()).log(Level.SEVERE, null, ex);
                }
                UIManager.getLookAndFeelDefaults().put("defaultFont", new Font("Comic Sans MS", Font.PLAIN, 14));
                new FrameInicial().setVisible(true);
            }

        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem RGBtoHSL;
    private javax.swing.JMenuItem carregarIMG;
    private javax.swing.JMenuItem circBresenham;
    private javax.swing.JMenuItem circEq;
    private javax.swing.JMenuItem circParametrica;
    private javax.swing.JMenu circunferencia;
    private javax.swing.JMenu img;
    private javax.swing.JMenuItem jMenuItemCasinha;
    private javax.swing.JMenuBar menu;
    private javax.swing.JMenu projecao3D;
    private javax.swing.JMenuItem retaBresenham;
    private javax.swing.JMenuItem retaClipping;
    private javax.swing.JMenuItem retaLinear;
    private javax.swing.JMenuItem retaParametrica;
    private javax.swing.JMenu retas;
    private javax.swing.JLabel titulo;
    // End of variables declaration//GEN-END:variables
}
